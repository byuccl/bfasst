// ==============================================================
// RTL generated by AutoPilot - High-Level Synthesis System (C, C++, SystemC)
// Version: 2010.a.3
// Copyright (C) :2006-2010 AutoESL Design Technologies, Inc.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module computeUG (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ug_p0_address0,
        ug_p0_ce0,
        ug_p0_we0,
        ug_p0_d0,
        ug_p1_address0,
        ug_p1_ce0,
        ug_p1_we0,
        ug_p1_d0,
        ug_p2_address0,
        ug_p2_ce0,
        ug_p2_we0,
        ug_p2_d0,
        ug_p3_address0,
        ug_p3_ce0,
        ug_p3_we0,
        ug_p3_d0,
        u_p0_address0,
        u_p0_ce0,
        u_p0_q0,
        u_p1_address0,
        u_p1_ce0,
        u_p1_q0,
        u_p2_address0,
        u_p2_ce0,
        u_p2_q0,
        u_p3_address0,
        u_p3_ce0,
        u_p3_q0,
        g_p0_address0,
        g_p0_ce0,
        g_p0_q0,
        g_p1_address0,
        g_p1_ce0,
        g_p1_q0,
        g_p2_address0,
        g_p2_ce0,
        g_p2_q0,
        g_p3_address0,
        g_p3_ce0,
        g_p3_q0
);

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output  [7:0] ug_p0_address0;
output   ug_p0_ce0;
output   ug_p0_we0;
output  [31:0] ug_p0_d0;
output  [7:0] ug_p1_address0;
output   ug_p1_ce0;
output   ug_p1_we0;
output  [31:0] ug_p1_d0;
output  [7:0] ug_p2_address0;
output   ug_p2_ce0;
output   ug_p2_we0;
output  [31:0] ug_p2_d0;
output  [7:0] ug_p3_address0;
output   ug_p3_ce0;
output   ug_p3_we0;
output  [31:0] ug_p3_d0;
output  [7:0] u_p0_address0;
output   u_p0_ce0;
input  [31:0] u_p0_q0;
output  [7:0] u_p1_address0;
output   u_p1_ce0;
input  [31:0] u_p1_q0;
output  [7:0] u_p2_address0;
output   u_p2_ce0;
input  [31:0] u_p2_q0;
output  [7:0] u_p3_address0;
output   u_p3_ce0;
input  [31:0] u_p3_q0;
output  [7:0] g_p0_address0;
output   g_p0_ce0;
input  [31:0] g_p0_q0;
output  [7:0] g_p1_address0;
output   g_p1_ce0;
input  [31:0] g_p1_q0;
output  [7:0] g_p2_address0;
output   g_p2_ce0;
input  [31:0] g_p2_q0;
output  [7:0] g_p3_address0;
output   g_p3_ce0;
input  [31:0] g_p3_q0;

reg ap_done;
reg ap_idle;
reg ug_p0_ce0;
reg ug_p0_we0;
reg ug_p1_ce0;
reg ug_p1_we0;
reg ug_p2_ce0;
reg ug_p2_we0;
reg ug_p3_ce0;
reg ug_p3_we0;
reg u_p0_ce0;
reg u_p1_ce0;
reg u_p2_ce0;
reg u_p3_ce0;
reg g_p0_ce0;
reg g_p1_ce0;
reg g_p2_ce0;
reg g_p3_ce0;
reg   [1:0] ap_CS_fsm;
reg   [9:0] k_reg_208;
reg   [31:0] j_reg_219;
reg   [31:0] i_1_reg_230;
wire   [0:0] exitcond_fu_267_p2;
reg   [0:0] exitcond_reg_415;
reg    ap_reg_ppiten_pp0_it0;
reg    ap_reg_ppiten_pp0_it1;
reg    ap_reg_ppiten_pp0_it2;
reg    ap_reg_ppiten_pp0_it3;
reg    ap_reg_ppiten_pp0_it4;
reg    ap_reg_ppiten_pp0_it5;
reg   [0:0] ap_reg_ppstg_exitcond_reg_415_pp0_it1;
reg   [0:0] ap_reg_ppstg_exitcond_reg_415_pp0_it2;
reg   [0:0] ap_reg_ppstg_exitcond_reg_415_pp0_it3;
reg   [0:0] ap_reg_ppstg_exitcond_reg_415_pp0_it4;
reg   [9:0] indvar_next_reg_419;
reg   [0:0] tmp_reg_424;
reg   [0:0] ap_reg_ppstg_tmp_reg_424_pp0_it1;
reg   [0:0] ap_reg_ppstg_tmp_reg_424_pp0_it2;
reg   [0:0] ap_reg_ppstg_tmp_reg_424_pp0_it3;
reg   [0:0] ap_reg_ppstg_tmp_reg_424_pp0_it4;
wire   [31:0] u_p1_addr16_cast_fu_311_p1;
reg   [31:0] u_p1_addr16_cast_reg_431;
reg   [31:0] ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1;
reg   [31:0] ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2;
reg   [31:0] ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3;
reg   [31:0] ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4;
reg   [31:0] j_1_reg_459;
reg   [31:0] i_reg_464;
reg   [31:0] u_Local_reg_469;
reg   [31:0] u_Local1_reg_474;
reg   [31:0] u_Local2_reg_479;
reg   [9:0] k_phi_fu_212_p4;
reg   [31:0] j_phi_fu_223_p4;
reg   [31:0] i_1_phi_fu_234_p4;
reg   [31:0] u_Local03_1_fu_52;
reg   [31:0] u_Local02_1_fu_56;
reg   [31:0] u_Local01_1_fu_60;
wire   [31:0] grp_fu_242_p2;
wire   [31:0] grp_fu_249_p2;
wire   [31:0] grp_fu_255_p2;
wire   [31:0] grp_fu_261_p2;
wire   [31:0] grp_fu_242_p0;
wire   [31:0] grp_fu_242_p1;
wire   [31:0] grp_fu_249_p0;
wire   [31:0] grp_fu_249_p1;
wire   [31:0] grp_fu_255_p0;
wire   [31:0] grp_fu_255_p1;
wire   [31:0] grp_fu_261_p0;
wire   [31:0] grp_fu_261_p1;
wire   [9:0] exitcond_fu_267_p1;
wire   [31:0] tmp_fu_283_p1;
wire   [7:0] i_1_cast_fu_289_p1;
wire   [7:0] p_shl_fu_293_p2;
wire   [7:0] u_p1_addr_cast_fu_299_p2;
wire   [7:0] j_cast_fu_279_p1;
wire   [7:0] u_p1_addr_fu_305_p2;
wire   [31:0] tmp5_fu_318_p2;
wire   [31:0] tmp6_fu_324_p1;
wire   [0:0] tmp6_fu_324_p2;
wire   [31:0] tmp7_fu_330_p2;
wire    grp_fu_242_ce;
wire    grp_fu_249_ce;
wire    grp_fu_255_ce;
wire    grp_fu_261_ce;
reg   [1:0] ap_NS_fsm;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st0_fsm_0 = 2'b00;
parameter    ap_ST_st1_fsm_1 = 2'b01;
parameter    ap_ST_pp0_stg0_fsm_2 = 2'b10;
parameter    ap_ST_st8_fsm_3 = 2'b11;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b00000000000000000000000000000001;
parameter    ap_const_lv10_384 = 10'b1110000100;
parameter    ap_const_lv10_1 = 10'b0000000001;
parameter    ap_const_lv32_3B = 32'b00000000000000000000000000111011;
parameter    ap_const_lv8_4 = 8'b00000100;
parameter    ap_const_lv32_4 = 32'b00000000000000000000000000000100;
parameter    ap_const_lv32_3C = 32'b00000000000000000000000000111100;
parameter    ap_true = 1'b1;


computeUG_grp_fu_242_ACMP_fmul_90 #(
    .ID( 90 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
computeUG_grp_fu_242_ACMP_fmul_90_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_242_p0 ),
    .din1( grp_fu_242_p1 ),
    .ce( grp_fu_242_ce ),
    .dout( grp_fu_242_p2 )
);

computeUG_grp_fu_249_ACMP_fmul_91 #(
    .ID( 91 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
computeUG_grp_fu_249_ACMP_fmul_91_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_249_p0 ),
    .din1( grp_fu_249_p1 ),
    .ce( grp_fu_249_ce ),
    .dout( grp_fu_249_p2 )
);

computeUG_grp_fu_255_ACMP_fmul_92 #(
    .ID( 92 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
computeUG_grp_fu_255_ACMP_fmul_92_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_255_p0 ),
    .din1( grp_fu_255_p1 ),
    .ce( grp_fu_255_ce ),
    .dout( grp_fu_255_p2 )
);

computeUG_grp_fu_261_ACMP_fmul_93 #(
    .ID( 93 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
computeUG_grp_fu_261_ACMP_fmul_93_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_261_p0 ),
    .din1( grp_fu_261_p1 ),
    .ce( grp_fu_261_ce ),
    .dout( grp_fu_261_p2 )
);



/// ap_CS_fsm assign process. ///
always @ (posedge ap_rst or posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st0_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_rst or posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & ~(exitcond_fu_267_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if ((ap_ST_st1_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_rst or posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (exitcond_fu_267_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if (((ap_ST_st1_fsm_1 == ap_CS_fsm) | ((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & ~(exitcond_fu_267_p2 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_rst or posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end else if ((ap_ST_st1_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it3 assign process. ///
always @ (posedge ap_rst or posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it3
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
        end else if ((ap_ST_st1_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it4 assign process. ///
always @ (posedge ap_rst or posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it4
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
        end else if ((ap_ST_st1_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it5 assign process. ///
always @ (posedge ap_rst or posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it5
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
        end else if ((ap_ST_st1_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm)) begin
        ap_reg_ppstg_exitcond_reg_415_pp0_it1 <= exitcond_reg_415;
    end
    if ((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm)) begin
        ap_reg_ppstg_exitcond_reg_415_pp0_it2 <= ap_reg_ppstg_exitcond_reg_415_pp0_it1;
    end
    if ((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm)) begin
        ap_reg_ppstg_exitcond_reg_415_pp0_it3 <= ap_reg_ppstg_exitcond_reg_415_pp0_it2;
    end
    if ((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm)) begin
        ap_reg_ppstg_exitcond_reg_415_pp0_it4 <= ap_reg_ppstg_exitcond_reg_415_pp0_it3;
    end
    if ((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm)) begin
        ap_reg_ppstg_tmp_reg_424_pp0_it1 <= tmp_reg_424;
    end
    if ((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm)) begin
        ap_reg_ppstg_tmp_reg_424_pp0_it2 <= ap_reg_ppstg_tmp_reg_424_pp0_it1;
    end
    if ((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm)) begin
        ap_reg_ppstg_tmp_reg_424_pp0_it3 <= ap_reg_ppstg_tmp_reg_424_pp0_it2;
    end
    if ((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm)) begin
        ap_reg_ppstg_tmp_reg_424_pp0_it4 <= ap_reg_ppstg_tmp_reg_424_pp0_it3;
    end
    if ((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm)) begin
        ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[0] <= u_p1_addr16_cast_reg_431[0];
        ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[1] <= u_p1_addr16_cast_reg_431[1];
        ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[2] <= u_p1_addr16_cast_reg_431[2];
        ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[3] <= u_p1_addr16_cast_reg_431[3];
        ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[4] <= u_p1_addr16_cast_reg_431[4];
        ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[5] <= u_p1_addr16_cast_reg_431[5];
        ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[6] <= u_p1_addr16_cast_reg_431[6];
        ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[7] <= u_p1_addr16_cast_reg_431[7];
    end
    if ((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm)) begin
        ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[0] <= ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[0];
        ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[1] <= ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[1];
        ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[2] <= ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[2];
        ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[3] <= ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[3];
        ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[4] <= ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[4];
        ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[5] <= ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[5];
        ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[6] <= ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[6];
        ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[7] <= ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[7];
    end
    if ((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm)) begin
        ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[0] <= ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[0];
        ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[1] <= ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[1];
        ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[2] <= ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[2];
        ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[3] <= ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[3];
        ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[4] <= ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[4];
        ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[5] <= ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[5];
        ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[6] <= ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[6];
        ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[7] <= ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[7];
    end
    if ((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm)) begin
        ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4[0] <= ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[0];
        ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4[1] <= ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[1];
        ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4[2] <= ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[2];
        ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4[3] <= ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[3];
        ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4[4] <= ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[4];
        ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4[5] <= ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[5];
        ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4[6] <= ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[6];
        ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4[7] <= ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[7];
    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        exitcond_reg_415 <= (k_phi_fu_212_p4 == exitcond_fu_267_p1? 1'b1: 1'b0);
    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_415 == ap_const_lv1_0))) begin
        i_1_reg_230 <= i_reg_464;
    end else if ((ap_ST_st1_fsm_1 == ap_CS_fsm)) begin
        i_1_reg_230 <= ap_const_lv32_0;
    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_fu_267_p2 == ap_const_lv1_0))) begin
        if (tmp6_fu_324_p2) begin
            i_reg_464 <= tmp7_fu_330_p2;
        end else begin
            i_reg_464 <= i_1_phi_fu_234_p4;
        end

    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        indvar_next_reg_419 <= (k_phi_fu_212_p4 + ap_const_lv10_1);
    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_fu_267_p2 == ap_const_lv1_0))) begin
        if (tmp6_fu_324_p2) begin
            j_1_reg_459 <= ap_const_lv32_0;
        end else begin
            j_1_reg_459 <= tmp5_fu_318_p2;
        end

    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_415 == ap_const_lv1_0))) begin
        j_reg_219 <= j_1_reg_459;
    end else if ((ap_ST_st1_fsm_1 == ap_CS_fsm)) begin
        j_reg_219 <= ap_const_lv32_0;
    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_415 == ap_const_lv1_0))) begin
        k_reg_208 <= indvar_next_reg_419;
    end else if ((ap_ST_st1_fsm_1 == ap_CS_fsm)) begin
        k_reg_208 <= ap_const_lv10_0;
    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_fu_267_p2 == ap_const_lv1_0))) begin
        tmp_reg_424 <= ($signed(j_phi_fu_223_p4) > $signed(tmp_fu_283_p1)? 1'b1: 1'b0);
    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_415 == ap_const_lv1_0))) begin
        if (tmp_reg_424) begin
            u_Local01_1_fu_60 <= u_Local01_1_fu_60;
        end else begin
            u_Local01_1_fu_60 <= u_p1_q0;
        end

    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_415 == ap_const_lv1_0))) begin
        if (tmp_reg_424) begin
            u_Local02_1_fu_56 <= u_Local02_1_fu_56;
        end else begin
            u_Local02_1_fu_56 <= u_p2_q0;
        end

    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_415 == ap_const_lv1_0))) begin
        if (tmp_reg_424) begin
            u_Local03_1_fu_52 <= u_Local03_1_fu_52;
        end else begin
            u_Local03_1_fu_52 <= u_p3_q0;
        end

    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_415 == ap_const_lv1_0))) begin
        if (tmp_reg_424) begin
            u_Local1_reg_474 <= u_Local02_1_fu_56;
        end else begin
            u_Local1_reg_474 <= u_p2_q0;
        end

    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_415 == ap_const_lv1_0))) begin
        if (tmp_reg_424) begin
            u_Local2_reg_479 <= u_Local03_1_fu_52;
        end else begin
            u_Local2_reg_479 <= u_p3_q0;
        end

    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_415 == ap_const_lv1_0))) begin
        if (tmp_reg_424) begin
            u_Local_reg_469 <= u_Local01_1_fu_60;
        end else begin
            u_Local_reg_469 <= u_p1_q0;
        end

    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_fu_267_p2 == ap_const_lv1_0))) begin
        u_p1_addr16_cast_reg_431[0] <= u_p1_addr16_cast_fu_311_p1[0];
        u_p1_addr16_cast_reg_431[1] <= u_p1_addr16_cast_fu_311_p1[1];
        u_p1_addr16_cast_reg_431[2] <= u_p1_addr16_cast_fu_311_p1[2];
        u_p1_addr16_cast_reg_431[3] <= u_p1_addr16_cast_fu_311_p1[3];
        u_p1_addr16_cast_reg_431[4] <= u_p1_addr16_cast_fu_311_p1[4];
        u_p1_addr16_cast_reg_431[5] <= u_p1_addr16_cast_fu_311_p1[5];
        u_p1_addr16_cast_reg_431[6] <= u_p1_addr16_cast_fu_311_p1[6];
        u_p1_addr16_cast_reg_431[7] <= u_p1_addr16_cast_fu_311_p1[7];
    end
end

/// ap_NS_fsm assign process. ///
always @ (ap_start or ap_CS_fsm or exitcond_fu_267_p2 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it4 or ap_reg_ppiten_pp0_it5)
begin
    if ((((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it5) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it4)) | ((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(exitcond_fu_267_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_NS_fsm = ap_ST_st8_fsm_3;
    end else if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st8_fsm_3 == ap_CS_fsm))) begin
        ap_NS_fsm = ap_ST_st0_fsm_0;
    end else if ((ap_ST_st1_fsm_1 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
    end else if ((((ap_ST_st0_fsm_0 == ap_CS_fsm) & (ap_const_logic_1 == ap_start)) | ((ap_const_logic_1 == ap_start) & (ap_ST_st8_fsm_3 == ap_CS_fsm)))) begin
        ap_NS_fsm = ap_ST_st1_fsm_1;
    end else begin
        ap_NS_fsm = ap_CS_fsm;
    end
end

/// ap_done assign process. ///
always @ (ap_CS_fsm)
begin
    if (((ap_ST_st0_fsm_0 == ap_CS_fsm) | (ap_ST_st8_fsm_3 == ap_CS_fsm))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st0_fsm_0 == ap_CS_fsm)) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// g_p0_ce0 assign process. ///
always @ (ap_CS_fsm or exitcond_reg_415 or ap_reg_ppiten_pp0_it1 or tmp_reg_424)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_415 == ap_const_lv1_0) & (tmp_reg_424 == ap_const_lv1_0))) begin
        g_p0_ce0 = ap_const_logic_1;
    end else begin
        g_p0_ce0 = ap_const_logic_0;
    end
end

/// g_p1_ce0 assign process. ///
always @ (ap_CS_fsm or exitcond_reg_415 or ap_reg_ppiten_pp0_it1 or tmp_reg_424)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_415 == ap_const_lv1_0) & (tmp_reg_424 == ap_const_lv1_0))) begin
        g_p1_ce0 = ap_const_logic_1;
    end else begin
        g_p1_ce0 = ap_const_logic_0;
    end
end

/// g_p2_ce0 assign process. ///
always @ (ap_CS_fsm or exitcond_reg_415 or ap_reg_ppiten_pp0_it1 or tmp_reg_424)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_415 == ap_const_lv1_0) & (tmp_reg_424 == ap_const_lv1_0))) begin
        g_p2_ce0 = ap_const_logic_1;
    end else begin
        g_p2_ce0 = ap_const_logic_0;
    end
end

/// g_p3_ce0 assign process. ///
always @ (ap_CS_fsm or exitcond_reg_415 or ap_reg_ppiten_pp0_it1 or tmp_reg_424)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_415 == ap_const_lv1_0) & (tmp_reg_424 == ap_const_lv1_0))) begin
        g_p3_ce0 = ap_const_logic_1;
    end else begin
        g_p3_ce0 = ap_const_logic_0;
    end
end

/// i_1_phi_fu_234_p4 assign process. ///
always @ (ap_CS_fsm or i_1_reg_230 or exitcond_reg_415 or ap_reg_ppiten_pp0_it1 or i_reg_464)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_415 == ap_const_lv1_0))) begin
        i_1_phi_fu_234_p4 = i_reg_464;
    end else begin
        i_1_phi_fu_234_p4 = i_1_reg_230;
    end
end

/// j_phi_fu_223_p4 assign process. ///
always @ (ap_CS_fsm or j_reg_219 or exitcond_reg_415 or ap_reg_ppiten_pp0_it1 or j_1_reg_459)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_415 == ap_const_lv1_0))) begin
        j_phi_fu_223_p4 = j_1_reg_459;
    end else begin
        j_phi_fu_223_p4 = j_reg_219;
    end
end

/// k_phi_fu_212_p4 assign process. ///
always @ (ap_CS_fsm or k_reg_208 or exitcond_reg_415 or ap_reg_ppiten_pp0_it1 or indvar_next_reg_419)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_415 == ap_const_lv1_0))) begin
        k_phi_fu_212_p4 = indvar_next_reg_419;
    end else begin
        k_phi_fu_212_p4 = k_reg_208;
    end
end

/// u_p0_ce0 assign process. ///
always @ (ap_CS_fsm or exitcond_reg_415 or ap_reg_ppiten_pp0_it1 or tmp_reg_424)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_415 == ap_const_lv1_0) & (tmp_reg_424 == ap_const_lv1_0))) begin
        u_p0_ce0 = ap_const_logic_1;
    end else begin
        u_p0_ce0 = ap_const_logic_0;
    end
end

/// u_p1_ce0 assign process. ///
always @ (ap_CS_fsm or exitcond_fu_267_p2 or ap_reg_ppiten_pp0_it0)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_fu_267_p2 == ap_const_lv1_0))) begin
        u_p1_ce0 = ap_const_logic_1;
    end else begin
        u_p1_ce0 = ap_const_logic_0;
    end
end

/// u_p2_ce0 assign process. ///
always @ (ap_CS_fsm or exitcond_fu_267_p2 or ap_reg_ppiten_pp0_it0)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_fu_267_p2 == ap_const_lv1_0))) begin
        u_p2_ce0 = ap_const_logic_1;
    end else begin
        u_p2_ce0 = ap_const_logic_0;
    end
end

/// u_p3_ce0 assign process. ///
always @ (ap_CS_fsm or exitcond_fu_267_p2 or ap_reg_ppiten_pp0_it0)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_fu_267_p2 == ap_const_lv1_0))) begin
        u_p3_ce0 = ap_const_logic_1;
    end else begin
        u_p3_ce0 = ap_const_logic_0;
    end
end

/// ug_p0_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it5 or ap_reg_ppstg_exitcond_reg_415_pp0_it4 or ap_reg_ppstg_tmp_reg_424_pp0_it4)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it5) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_reg_424_pp0_it4) & (ap_reg_ppstg_exitcond_reg_415_pp0_it4 == ap_const_lv1_0))) begin
        ug_p0_ce0 = ap_const_logic_1;
    end else begin
        ug_p0_ce0 = ap_const_logic_0;
    end
end

/// ug_p0_we0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it5 or ap_reg_ppstg_exitcond_reg_415_pp0_it4 or ap_reg_ppstg_tmp_reg_424_pp0_it4)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it5) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_reg_424_pp0_it4) & (ap_reg_ppstg_exitcond_reg_415_pp0_it4 == ap_const_lv1_0))) begin
        ug_p0_we0 = ap_const_logic_1;
    end else begin
        ug_p0_we0 = ap_const_logic_0;
    end
end

/// ug_p1_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it5 or ap_reg_ppstg_exitcond_reg_415_pp0_it4 or ap_reg_ppstg_tmp_reg_424_pp0_it4)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it5) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_reg_424_pp0_it4) & (ap_reg_ppstg_exitcond_reg_415_pp0_it4 == ap_const_lv1_0))) begin
        ug_p1_ce0 = ap_const_logic_1;
    end else begin
        ug_p1_ce0 = ap_const_logic_0;
    end
end

/// ug_p1_we0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it5 or ap_reg_ppstg_exitcond_reg_415_pp0_it4 or ap_reg_ppstg_tmp_reg_424_pp0_it4)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it5) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_reg_424_pp0_it4) & (ap_reg_ppstg_exitcond_reg_415_pp0_it4 == ap_const_lv1_0))) begin
        ug_p1_we0 = ap_const_logic_1;
    end else begin
        ug_p1_we0 = ap_const_logic_0;
    end
end

/// ug_p2_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it5 or ap_reg_ppstg_exitcond_reg_415_pp0_it4 or ap_reg_ppstg_tmp_reg_424_pp0_it4)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it5) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_reg_424_pp0_it4) & (ap_reg_ppstg_exitcond_reg_415_pp0_it4 == ap_const_lv1_0))) begin
        ug_p2_ce0 = ap_const_logic_1;
    end else begin
        ug_p2_ce0 = ap_const_logic_0;
    end
end

/// ug_p2_we0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it5 or ap_reg_ppstg_exitcond_reg_415_pp0_it4 or ap_reg_ppstg_tmp_reg_424_pp0_it4)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it5) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_reg_424_pp0_it4) & (ap_reg_ppstg_exitcond_reg_415_pp0_it4 == ap_const_lv1_0))) begin
        ug_p2_we0 = ap_const_logic_1;
    end else begin
        ug_p2_we0 = ap_const_logic_0;
    end
end

/// ug_p3_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it5 or ap_reg_ppstg_exitcond_reg_415_pp0_it4 or ap_reg_ppstg_tmp_reg_424_pp0_it4)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it5) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_reg_424_pp0_it4) & (ap_reg_ppstg_exitcond_reg_415_pp0_it4 == ap_const_lv1_0))) begin
        ug_p3_ce0 = ap_const_logic_1;
    end else begin
        ug_p3_ce0 = ap_const_logic_0;
    end
end

/// ug_p3_we0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it5 or ap_reg_ppstg_exitcond_reg_415_pp0_it4 or ap_reg_ppstg_tmp_reg_424_pp0_it4)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it5) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_reg_424_pp0_it4) & (ap_reg_ppstg_exitcond_reg_415_pp0_it4 == ap_const_lv1_0))) begin
        ug_p3_we0 = ap_const_logic_1;
    end else begin
        ug_p3_we0 = ap_const_logic_0;
    end
end
assign exitcond_fu_267_p1 = ap_const_lv10_384;
assign exitcond_fu_267_p2 = (k_phi_fu_212_p4 == exitcond_fu_267_p1? 1'b1: 1'b0);
assign g_p0_address0 = u_p1_addr16_cast_reg_431;
assign g_p1_address0 = u_p1_addr16_cast_reg_431;
assign g_p2_address0 = u_p1_addr16_cast_reg_431;
assign g_p3_address0 = u_p1_addr16_cast_reg_431;
assign grp_fu_242_ce = ap_const_logic_1;
assign grp_fu_242_p0 = g_p0_q0;
assign grp_fu_242_p1 = u_p0_q0;
assign grp_fu_249_ce = ap_const_logic_1;
assign grp_fu_249_p0 = g_p1_q0;
assign grp_fu_249_p1 = u_Local_reg_469;
assign grp_fu_255_ce = ap_const_logic_1;
assign grp_fu_255_p0 = g_p2_q0;
assign grp_fu_255_p1 = u_Local1_reg_474;
assign grp_fu_261_ce = ap_const_logic_1;
assign grp_fu_261_p0 = g_p3_q0;
assign grp_fu_261_p1 = u_Local2_reg_479;
assign i_1_cast_fu_289_p1 = i_1_phi_fu_234_p4[7:0];
assign j_cast_fu_279_p1 = j_phi_fu_223_p4[7:0];
assign p_shl_fu_293_p2 = i_1_cast_fu_289_p1 << ap_const_lv8_4;
assign tmp5_fu_318_p2 = (j_phi_fu_223_p4 + ap_const_lv32_4);
assign tmp6_fu_324_p1 = ap_const_lv32_3C;
assign tmp6_fu_324_p2 = (tmp5_fu_318_p2 == tmp6_fu_324_p1? 1'b1: 1'b0);
assign tmp7_fu_330_p2 = (i_1_phi_fu_234_p4 + ap_const_lv32_1);
assign tmp_fu_283_p1 = ap_const_lv32_3B;
assign u_p0_address0 = u_p1_addr16_cast_reg_431;
assign u_p1_addr16_cast_fu_311_p1 = {{24{1'b0}}, {u_p1_addr_fu_305_p2}};
assign u_p1_addr_cast_fu_299_p2 = (p_shl_fu_293_p2 - i_1_cast_fu_289_p1);
assign u_p1_addr_fu_305_p2 = (u_p1_addr_cast_fu_299_p2 + j_cast_fu_279_p1);
assign u_p1_address0 = u_p1_addr16_cast_fu_311_p1;
assign u_p2_address0 = u_p1_addr16_cast_fu_311_p1;
assign u_p3_address0 = u_p1_addr16_cast_fu_311_p1;
assign ug_p0_address0 = ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4;
assign ug_p0_d0 = grp_fu_242_p2;
assign ug_p1_address0 = ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4;
assign ug_p1_d0 = grp_fu_249_p2;
assign ug_p2_address0 = ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4;
assign ug_p2_d0 = grp_fu_255_p2;
assign ug_p3_address0 = ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4;
assign ug_p3_d0 = grp_fu_261_p2;
always @ (ap_clk)
begin
    u_p1_addr16_cast_reg_431[8] <= 1'b0;
    u_p1_addr16_cast_reg_431[9] <= 1'b0;
    u_p1_addr16_cast_reg_431[10] <= 1'b0;
    u_p1_addr16_cast_reg_431[11] <= 1'b0;
    u_p1_addr16_cast_reg_431[12] <= 1'b0;
    u_p1_addr16_cast_reg_431[13] <= 1'b0;
    u_p1_addr16_cast_reg_431[14] <= 1'b0;
    u_p1_addr16_cast_reg_431[15] <= 1'b0;
    u_p1_addr16_cast_reg_431[16] <= 1'b0;
    u_p1_addr16_cast_reg_431[17] <= 1'b0;
    u_p1_addr16_cast_reg_431[18] <= 1'b0;
    u_p1_addr16_cast_reg_431[19] <= 1'b0;
    u_p1_addr16_cast_reg_431[20] <= 1'b0;
    u_p1_addr16_cast_reg_431[21] <= 1'b0;
    u_p1_addr16_cast_reg_431[22] <= 1'b0;
    u_p1_addr16_cast_reg_431[23] <= 1'b0;
    u_p1_addr16_cast_reg_431[24] <= 1'b0;
    u_p1_addr16_cast_reg_431[25] <= 1'b0;
    u_p1_addr16_cast_reg_431[26] <= 1'b0;
    u_p1_addr16_cast_reg_431[27] <= 1'b0;
    u_p1_addr16_cast_reg_431[28] <= 1'b0;
    u_p1_addr16_cast_reg_431[29] <= 1'b0;
    u_p1_addr16_cast_reg_431[30] <= 1'b0;
    u_p1_addr16_cast_reg_431[31] <= 1'b0;
end

always @ (ap_clk)
begin
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[8] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[9] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[10] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[11] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[12] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[13] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[14] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[15] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[16] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[17] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[18] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[19] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[20] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[21] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[22] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[23] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[24] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[25] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[26] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[27] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[28] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[29] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[30] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it1[31] <= 1'b0;
end

always @ (ap_clk)
begin
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[8] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[9] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[10] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[11] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[12] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[13] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[14] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[15] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[16] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[17] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[18] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[19] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[20] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[21] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[22] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[23] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[24] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[25] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[26] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[27] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[28] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[29] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[30] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it2[31] <= 1'b0;
end

always @ (ap_clk)
begin
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[8] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[9] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[10] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[11] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[12] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[13] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[14] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[15] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[16] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[17] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[18] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[19] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[20] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[21] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[22] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[23] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[24] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[25] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[26] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[27] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[28] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[29] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[30] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it3[31] <= 1'b0;
end

always @ (ap_clk)
begin
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4[8] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4[9] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4[10] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4[11] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4[12] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4[13] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4[14] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4[15] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4[16] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4[17] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4[18] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4[19] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4[20] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4[21] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4[22] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4[23] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4[24] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4[25] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4[26] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4[27] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4[28] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4[29] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4[30] <= 1'b0;
    ap_reg_ppstg_u_p1_addr16_cast_reg_431_pp0_it4[31] <= 1'b0;
end



endmodule //computeUG

