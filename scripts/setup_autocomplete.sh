#!/usr/bin/env bash
BASHRC="$HOME/.bashrc"
AUTOCOMP_SCRIPT="$HOME/.bfasst_autocomplete.sh"

add_if_missing() { local l=$1; grep -Fxq "$l" "$BASHRC" || echo "$l" >>"$BASHRC"; }

# 1. locate repo root
if git -C "$(dirname "${BASH_SOURCE[0]}")" rev-parse --show-toplevel &>/dev/null; then
    REPO_ROOT=$(git -C "$(dirname "${BASH_SOURCE[0]}")" rev-parse --show-toplevel)
else
    REPO_ROOT="$(cd -- "$(dirname "${BASH_SOURCE[0]}")/.." && pwd -P)"
fi

RUN_PY="$REPO_ROOT/scripts/run.py"
[[ -f $RUN_PY ]] || { echo "Cannot find run.py at $RUN_PY" >&2; exit 1; }

VENV_PYTHON="$REPO_ROOT/.venv/bin/python"
[[ -x $VENV_PYTHON ]] || { echo "Python not found at $VENV_PYTHON" >&2; exit 1; }

# 2. write helper
cat >"$AUTOCOMP_SCRIPT" <<EOF
# Auto-generated by setup_autocomplete.sh
RUN_PY="$RUN_PY"
PY="$VENV_PYTHON"

flow_run() { "\$PY" "\$RUN_PY" "\$@"; }

_bfasst_ac() {
    local cur
    _get_comp_words_by_ref -n =: cur
    
    # space-separated list of flows
    local flows
    flows=\$("\$PY" "\$RUN_PY" --list-flows 2>/dev/null | tr '\\n' ' ')
    [[ -z \$flows ]] && return     # nothing to complete

    # has the user already typed a flow name?
    local seen_flow=0 w
    for w in "\${COMP_WORDS[@]:1:\$COMP_CWORD-1}"; do
        [[ " \$flows " == *" \$w "* ]] && { seen_flow=1; break; }
    done

    if (( ! seen_flow )); then
        COMPREPLY=( \$(compgen -W "\$flows" -- "\$cur") )
    else
        compopt -o default
    fi
}
complete -F _bfasst_ac flow_run
EOF

# 3. ensure it's sourced
add_if_missing ""
add_if_missing "source ~/.bfasst_autocomplete.sh"

echo "Autocomplete installed.  Run 'source ~/.bashrc' or open a new shell."
