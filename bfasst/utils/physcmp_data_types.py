"""Data types to contain different files generated by Vivado"""

from __future__ import annotations
from dataclasses import dataclass
from pathlib import Path
from argparse import Namespace


@dataclass
class ImplReports:
    """Container for different files generated by Vivado"""

    dcp: Path
    edf: Path
    setup_timing: Path
    hold_timing: Path
    timing_summary_full: Path
    utilization: Path
    power: Path

    @staticmethod
    def from_args(args: Namespace, prefix: str) -> ImplReports:
        """
        Build an ImplReports by pulling attributes like
          --<prefix>_dcp, --<prefix>_edf, etc. from argparse.Namespace.
        """
        return ImplReports(
            dcp=Path(getattr(args, f"{prefix}_dcp")),
            edf=Path(getattr(args, f"{prefix}_edf")),
            setup_timing=Path(getattr(args, f"{prefix}_setup_timing")),
            hold_timing=Path(getattr(args, f"{prefix}_hold_timing")),
            timing_summary_full=Path(getattr(args, f"{prefix}_timing_summary_full")),
            utilization=Path(getattr(args, f"{prefix}_utilization")),
            power=Path(getattr(args, f"{prefix}_power")),
        )
